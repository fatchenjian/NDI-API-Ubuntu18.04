<ARG>
<NAME>GstAdder::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Target caps</NICK>
<BLURB>Set target format for mixing (NULL means ANY). Setting this property takes a reference to the supplied GstCaps object.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::add-borders</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Add Borders</NICK>
<BLURB>Add black borders if necessary to keep the display aspect ratio.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::dither</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Dither</NICK>
<BLURB>Add dither (only used for Lanczos method).</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::envelope</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[1,5]</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Envelope</NICK>
<BLURB>Size of filter envelope.</BLURB>
<DEFAULT>2</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::method</NAME>
<TYPE>GstVideoScaleMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>method</NICK>
<BLURB>method.</BLURB>
<DEFAULT>Bilinear (2-tap)</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::sharpen</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Sharpen</NICK>
<BLURB>Sharpening.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::sharpness</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0.5,1.5]</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Sharpness</NICK>
<BLURB>Sharpness of filter.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::gamma-decode</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Gamma Decode</NICK>
<BLURB>Decode gamma before scaling.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::n-threads</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Threads</NICK>
<BLURB>Maximum number of threads to use.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::buffer-duration</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer duration (ns)</NICK>
<BLURB>Buffer duration when buffering streams (-1 default value).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::buffer-size</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer size (bytes)</NICK>
<BLURB>Buffer size when buffering streams (-1 default value).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The caps on which to stop decoding. (NULL = default).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::connection-speed</NAME>
<TYPE>guint64</TYPE>
<RANGE><= 18446744073709551</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::download</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Download</NICK>
<BLURB>Attempt download buffering when buffering network streams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::expose-all-streams</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Expose All Streams</NICK>
<BLURB>Expose all streams, including those of unknown type or that don't match the 'caps' property.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::ring-buffer-max-size</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXUINT</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. ring buffer size (bytes)</NICK>
<BLURB>Max. amount of data in the ring buffer (bytes, 0 = ring buffer disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::source</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Source</NICK>
<BLURB>Source object used.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>URI</NICK>
<BLURB>URI to decode.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::use-buffering</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Use Buffering</NICK>
<BLURB>Perform buffering on demuxed/parsed media.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstSubtitleOverlay::font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Subtitle font description</NICK>
<BLURB>Pango font description of font to be used for subtitle rendering.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstSubtitleOverlay::silent</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Silent</NICK>
<BLURB>Whether to show subtitles.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstSubtitleOverlay::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstSubtitleOverlay::subtitle-ts-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Subtitle Timestamp Offset</NICK>
<BLURB>The synchronisation offset between text and video in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::audio-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio Sink</NICK>
<BLURB>the audio output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::av-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>AV Offset</NICK>
<BLURB>The synchronisation offset between audio and video in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::flags</NAME>
<TYPE>GstPlayFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Flags</NICK>
<BLURB>Flags to control behaviour.</BLURB>
<DEFAULT>Render the video stream|Render the audio stream|Render subtitles|Use software volume|Use software color balance</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::force-aspect-ratio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Force Aspect Ratio</NICK>
<BLURB>When enabled, scaling will respect original aspect ratio.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::mute</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mute</NICK>
<BLURB>Mute the audio channel without changing the volume.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::sample</NAME>
<TYPE>GstSample*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Sample</NICK>
<BLURB>The last sample (NULL = no video available).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::send-event-mode</NAME>
<TYPE>GstPlaySinkSendEventMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Send event mode</NICK>
<BLURB>How to send events received in send_event function.</BLURB>
<DEFAULT>Default GstBin's send_event handling (default)</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::subtitle-font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>Subtitle font description</NICK>
<BLURB>Pango font description of font to be used for subtitle rendering.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::text-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text sink</NICK>
<BLURB>the text output element to use (NULL = default subtitleoverlay).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::video-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video Sink</NICK>
<BLURB>the video output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::vis-plugin</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Vis plugin</NICK>
<BLURB>the visualization element to use (NULL = default).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Volume</NICK>
<BLURB>The audio volume, 1.0=100%.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::audio-filter</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio filter</NICK>
<BLURB>the audio filter(s) to apply, if possible.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::video-filter</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video filter</NICK>
<BLURB>the video filter(s) to apply, if possible.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::text-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text Offset</NICK>
<BLURB>The synchronisation offset between text and video in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::audio-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio Sink</NICK>
<BLURB>the audio output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::audio-stream-combiner</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio stream combiner</NICK>
<BLURB>Current audio stream combiner (NULL = input-selector).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::av-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>AV Offset</NICK>
<BLURB>The synchronisation offset between audio and video in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::buffer-duration</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer duration (ns)</NICK>
<BLURB>Buffer duration when buffering network streams.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::buffer-size</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer size (bytes)</NICK>
<BLURB>Buffer size when buffering network streams.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::connection-speed</NAME>
<TYPE>guint64</TYPE>
<RANGE><= 18446744073709551</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::current-audio</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current audio</NICK>
<BLURB>Currently playing audio stream (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::current-suburi</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Current .sub-URI</NICK>
<BLURB>The currently playing URI of a subtitle.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::current-text</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current Text</NICK>
<BLURB>Currently playing text stream (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::current-uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Current URI</NICK>
<BLURB>The currently playing URI.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::current-video</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current Video</NICK>
<BLURB>Currently playing video stream (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::flags</NAME>
<TYPE>GstPlayFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Flags</NICK>
<BLURB>Flags to control behaviour.</BLURB>
<DEFAULT>Render the video stream|Render the audio stream|Render subtitles|Use software volume|Deinterlace video if necessary|Use software color balance</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::force-aspect-ratio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Force Aspect Ratio</NICK>
<BLURB>When enabled, scaling will respect original aspect ratio.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::mute</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mute</NICK>
<BLURB>Mute the audio channel without changing the volume.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::n-audio</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>r</FLAGS>
<NICK>Number Audio</NICK>
<BLURB>Total number of audio streams.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::n-text</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>r</FLAGS>
<NICK>Number Text</NICK>
<BLURB>Total number of text streams.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::n-video</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>r</FLAGS>
<NICK>Number Video</NICK>
<BLURB>Total number of video streams.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::ring-buffer-max-size</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXUINT</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. ring buffer size (bytes)</NICK>
<BLURB>Max. amount of data in the ring buffer (bytes, 0 = ring buffer disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::sample</NAME>
<TYPE>GstSample*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Sample</NICK>
<BLURB>The last sample (NULL = no video available).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::source</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Source</NICK>
<BLURB>Source element.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::subtitle-font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>Subtitle font description</NICK>
<BLURB>Pango font description of font to be used for subtitle rendering.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::suburi</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>.sub-URI</NICK>
<BLURB>Optional URI of a subtitle.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::text-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text plugin</NICK>
<BLURB>the text output element to use (NULL = default subtitleoverlay).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::text-stream-combiner</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text stream combiner</NICK>
<BLURB>Current text stream combiner (NULL = input-selector).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>URI</NICK>
<BLURB>URI of the media to play.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::video-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video Sink</NICK>
<BLURB>the video output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::video-stream-combiner</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video stream combiner</NICK>
<BLURB>Current video stream combiner (NULL = input-selector).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::vis-plugin</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Vis plugin</NICK>
<BLURB>the visualization element to use (NULL = default).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Volume</NICK>
<BLURB>The audio volume, 1.0=100%.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::audio-filter</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio filter</NICK>
<BLURB>the audio filter(s) to apply, if possible.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::video-filter</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video filter</NICK>
<BLURB>the video filter(s) to apply, if possible.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::video-multiview-flags</NAME>
<TYPE>GstVideoMultiviewFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Multiview Flags Override</NICK>
<BLURB>Override details of the multiview frame layout.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::video-multiview-mode</NAME>
<TYPE>GstVideoMultiviewFramePacking</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Multiview Mode Override</NICK>
<BLURB>Re-interpret a video stream as one of several frame-packed stereoscopic modes.</BLURB>
<DEFAULT>GST_VIDEO_MULTIVIEW_FRAME_PACKING_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::text-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text Offset</NICK>
<BLURB>The synchronisation offset between text and video in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The caps on which to stop decoding.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::connection-speed</NAME>
<TYPE>guint64</TYPE>
<RANGE><= 18446744073709551</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::expose-all-streams</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Expose All Streams</NICK>
<BLURB>Expose all streams, including those of unknown type or that don't match the 'caps' property.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::high-percent</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,100]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>High percent</NICK>
<BLURB>High threshold for buffering to finish.</BLURB>
<DEFAULT>99</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::low-percent</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,100]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Low percent</NICK>
<BLURB>Low threshold for buffering to start.</BLURB>
<DEFAULT>10</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::max-size-buffers</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (buffers)</NICK>
<BLURB>Max. number of buffers in the queue (0=automatic).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::max-size-bytes</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (bytes)</NICK>
<BLURB>Max. amount of bytes in the queue (0=automatic).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::max-size-time</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (ns)</NICK>
<BLURB>Max. amount of data in the queue (in ns, 0=automatic).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::post-stream-topology</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Post Stream Topology</NICK>
<BLURB>Post stream-topology messages.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::sink-caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sink Caps</NICK>
<BLURB>The caps of the input data. (NULL = use typefind element).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::use-buffering</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Use Buffering</NICK>
<BLURB>Emit GST_MESSAGE_BUFFERING based on low-/high-percent thresholds.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstSubParse::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle charset encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 or any other Unicode encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstSubParse::video-fps</NAME>
<TYPE>GstFraction</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video framerate</NICK>
<BLURB>Framerate of the video stream. This is needed by some subtitle formats to synchronize subtitles and video properly. If not set and the subtitle format requires it subtitles may be out of sync.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioResample::quality</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Quality</NICK>
<BLURB>Resample quality with 0 being the lowest and 10 being the best.</BLURB>
<DEFAULT>4</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioResample::sinc-filter-auto-threshold</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sinc filter auto mode threshold</NICK>
<BLURB>Memory usage threshold to use if sinc filter mode is AUTO, given in bytes.</BLURB>
<DEFAULT>1048576</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioResample::sinc-filter-mode</NAME>
<TYPE>GstAudioResamplerFilterMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sinc filter table mode</NICK>
<BLURB>What sinc filter table mode to use.</BLURB>
<DEFAULT>GST_AUDIO_RESAMPLER_FILTER_MODE_AUTO</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioResample::resample-method</NAME>
<TYPE>GstAudioResamplerMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Resample method to use</NICK>
<BLURB>What resample method to use.</BLURB>
<DEFAULT>GST_AUDIO_RESAMPLER_METHOD_KAISER</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioResample::sinc-filter-interpolation</NAME>
<TYPE>GstAudioResamplerFilterInterpolation</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sinc filter interpolation</NICK>
<BLURB>How to interpolate the sinc filter table.</BLURB>
<DEFAULT>GST_AUDIO_RESAMPLER_FILTER_INTERPOLATION_CUBIC</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoConvert::dither</NAME>
<TYPE>GstVideoDitherMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Dither</NICK>
<BLURB>Apply dithering while converting.</BLURB>
<DEFAULT>GST_VIDEO_DITHER_BAYER</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoConvert::alpha-mode</NAME>
<TYPE>GstVideoAlphaMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Alpha Mode</NICK>
<BLURB>Alpha Mode to use.</BLURB>
<DEFAULT>GST_VIDEO_ALPHA_MODE_COPY</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoConvert::alpha-value</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Alpha Value</NICK>
<BLURB>Alpha Value to use.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoConvert::chroma-mode</NAME>
<TYPE>GstVideoChromaMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Chroma Mode</NICK>
<BLURB>Chroma Resampling Mode.</BLURB>
<DEFAULT>GST_VIDEO_CHROMA_MODE_FULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoConvert::chroma-resampler</NAME>
<TYPE>GstVideoResamplerMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Chroma resampler</NICK>
<BLURB>Chroma resampler method.</BLURB>
<DEFAULT>GST_VIDEO_RESAMPLER_METHOD_LINEAR</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoConvert::dither-quantization</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Dither Quantize</NICK>
<BLURB>Quantizer to use.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoConvert::gamma-mode</NAME>
<TYPE>GstVideoGammaMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Gamma Mode</NICK>
<BLURB>Gamma Conversion Mode.</BLURB>
<DEFAULT>GST_VIDEO_GAMMA_MODE_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoConvert::matrix-mode</NAME>
<TYPE>GstVideoMatrixMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Matrix Mode</NICK>
<BLURB>Matrix Conversion Mode.</BLURB>
<DEFAULT>GST_VIDEO_MATRIX_MODE_FULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoConvert::primaries-mode</NAME>
<TYPE>GstVideoPrimariesMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Primaries Mode</NICK>
<BLURB>Primaries Conversion Mode.</BLURB>
<DEFAULT>GST_VIDEO_PRIMARIES_MODE_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoConvert::n-threads</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Threads</NICK>
<BLURB>Maximum number of threads to use.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstGioStreamSrc::stream</NAME>
<TYPE>GInputStream*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Stream</NICK>
<BLURB>Stream to read from.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGioStreamSink::stream</NAME>
<TYPE>GOutputStream*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Stream</NICK>
<BLURB>Stream to write to.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGioSrc::file</NAME>
<TYPE>GFile*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>File</NICK>
<BLURB>GFile to read from.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGioSrc::location</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Location</NICK>
<BLURB>URI location to read from.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGioSink::file</NAME>
<TYPE>GFile*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>File</NICK>
<BLURB>GFile to write to.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGioSink::location</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Location</NICK>
<BLURB>URI location to write to.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::audio-jitter-tolerance</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio jitter tolerance</NICK>
<BLURB>Amount of timestamp jitter/imperfection to allow on audio streams before inserting/dropping samples (ns).</BLURB>
<DEFAULT>20000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::avoid-reencoding</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Avoid re-encoding</NICK>
<BLURB>Whether to re-encode portions of compatible video streams that lay on segment boundaries.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::flags</NAME>
<TYPE>GstEncodeBinFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Flags</NICK>
<BLURB>Flags to control behaviour.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::profile</NAME>
<TYPE>GstEncodingProfile*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Profile</NICK>
<BLURB>The GstEncodingProfile to use.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::queue-buffers-max</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (buffers)</NICK>
<BLURB>Max. number of buffers in the queue (0=disable).</BLURB>
<DEFAULT>200</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::queue-bytes-max</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (kB)</NICK>
<BLURB>Max. amount of data in the queue (bytes, 0=disable).</BLURB>
<DEFAULT>10485760</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::queue-time-max</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (ns)</NICK>
<BLURB>Max. amount of data in the queue (in ns, 0=disable).</BLURB>
<DEFAULT>1000000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::can-activate-pull</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Can activate pull</NICK>
<BLURB>Can activate in pull mode.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::can-activate-push</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Can activate push</NICK>
<BLURB>Can activate in push mode.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::freq</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,5.36871e+08]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Frequency</NICK>
<BLURB>Frequency of test signal. The sample rate needs to be at least 4 times higher.</BLURB>
<DEFAULT>440</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::is-live</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Is Live</NICK>
<BLURB>Whether to act as a live source.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::samplesperbuffer</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Samples per buffer</NICK>
<BLURB>Number of samples in each outgoing buffer.</BLURB>
<DEFAULT>1024</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::timestamp-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Timestamp offset</NICK>
<BLURB>An offset added to timestamps set on buffers (in ns).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Volume</NICK>
<BLURB>Volume of test signal.</BLURB>
<DEFAULT>0.8</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::wave</NAME>
<TYPE>GstAudioTestSrcWave</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Waveform</NICK>
<BLURB>Oscillator waveform.</BLURB>
<DEFAULT>Sine</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::apply-tick-ramp</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Apply tick ramp</NICK>
<BLURB>Apply ramp to tick samples.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::marker-tick-period</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Marker tick period</NICK>
<BLURB>Make every Nth tick a marker tick (= a tick with different volume). Only used if wave = ticks. 0 = no marker ticks.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::marker-tick-volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Marker tick volume</NICK>
<BLURB>Volume of marker ticks. Only used if wave = ticks andmarker-tick-period is set to a nonzero value.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::sine-periods-per-tick</NAME>
<TYPE>guint</TYPE>
<RANGE>>= 1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sine periods per tick</NICK>
<BLURB>Number of sine wave periods in one tick. Only used if wave = ticks.</BLURB>
<DEFAULT>10</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::tick-interval</NAME>
<TYPE>guint64</TYPE>
<RANGE>>= 1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Time between ticks</NICK>
<BLURB>Distance between start of current and start of next tick, in nanoseconds.</BLURB>
<DEFAULT>1000000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::block</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Block</NICK>
<BLURB>Block push-buffer when max-bytes are queued.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The allowed caps for the src pad.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::current-level-bytes</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Current Level Bytes</NICK>
<BLURB>The number of currently queued bytes.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::emit-signals</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Emit signals</NICK>
<BLURB>Emit need-data, enough-data and seek-data signals.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::format</NAME>
<TYPE>GstFormat</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Format</NICK>
<BLURB>The format of the segment events and seek.</BLURB>
<DEFAULT>GST_FORMAT_BYTES</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::is-live</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Is Live</NICK>
<BLURB>Whether to act as a live source.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::max-bytes</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max bytes</NICK>
<BLURB>The maximum number of bytes to queue internally (0 = unlimited).</BLURB>
<DEFAULT>200000</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::max-latency</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max Latency</NICK>
<BLURB>The maximum latency (-1 = unlimited).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::min-latency</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Min Latency</NICK>
<BLURB>The minimum latency (-1 = default).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::min-percent</NAME>
<TYPE>guint</TYPE>
<RANGE><= 100</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Min Percent</NICK>
<BLURB>Emit need-data when queued bytes drops below this percent of max-bytes.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::size</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Size</NICK>
<BLURB>The size of the data stream in bytes (-1 if unknown).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::stream-type</NAME>
<TYPE>GstAppStreamType</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Stream Type</NICK>
<BLURB>the type of the stream.</BLURB>
<DEFAULT>GST_APP_STREAM_TYPE_STREAM</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::duration</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Duration</NICK>
<BLURB>The duration of the data stream in nanoseconds (GST_CLOCK_TIME_NONE if unknown).</BLURB>
<DEFAULT>18446744073709551615</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The allowed caps for the sink pad.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::drop</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Drop</NICK>
<BLURB>Drop old buffers when the buffer queue is filled.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::emit-signals</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Emit signals</NICK>
<BLURB>Emit new-preroll and new-sample signals.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::eos</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>EOS</NICK>
<BLURB>Check if the sink is EOS or not started.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::max-buffers</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max Buffers</NICK>
<BLURB>The maximum number of buffers to queue internally (0 = unlimited).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::wait-on-eos</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Wait on EOS</NICK>
<BLURB>Wait for all buffers to be processed after receiving an EOS.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::buffer-list</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer List</NICK>
<BLURB>Use buffer lists.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVolume::mute</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mute</NICK>
<BLURB>mute channel.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVolume::volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Volume</NICK>
<BLURB>volume factor, 1.0=100%.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::background-color</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Background Color</NICK>
<BLURB>Background color to use (big-endian ARGB).</BLURB>
<DEFAULT>4278190080</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::foreground-color</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Foreground Color</NICK>
<BLURB>Foreground color to use (big-endian ARGB).</BLURB>
<DEFAULT>4294967295</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::horizontal-speed</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Speed</NICK>
<BLURB>Scroll image number of pixels per frame (positive is scroll to the left).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::is-live</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Is Live</NICK>
<BLURB>Whether to act as a live source.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::k0</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate zero order phase</NICK>
<BLURB>Zoneplate zero order phase, for generating plain fields or phase offsets.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kt</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 1st order t phase</NICK>
<BLURB>Zoneplate 1st order t phase, for generating phase rotation as a function of time.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kt2</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 2nd order t phase</NICK>
<BLURB>Zoneplate 2nd order t phase, t*t/256 cycles per picture.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kx</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 1st order x phase</NICK>
<BLURB>Zoneplate 1st order x phase, for generating constant horizontal frequencies.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kx2</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 2nd order x phase</NICK>
<BLURB>Zoneplate 2nd order x phase, normalised to kx2/256 cycles per horizontal pixel at width/2 from origin.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kxt</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate x*t product phase</NICK>
<BLURB>Zoneplate x*t product phase, normalised to kxy/256 cycles per vertical pixel at width/2 from origin.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kxy</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate x*y product phase</NICK>
<BLURB>Zoneplate x*y product phase.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::ky</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 1st order y phase</NICK>
<BLURB>Zoneplate 1st order y phase, for generating contant vertical frequencies.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::ky2</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 2nd order y phase</NICK>
<BLURB>Zoneplate 2nd order y phase, normailsed to ky2/256 cycles per vertical pixel at height/2 from origin.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kyt</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate y*t product phase</NICK>
<BLURB>Zoneplate y*t product phase.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::pattern</NAME>
<TYPE>GstVideoTestSrcPattern</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Pattern</NICK>
<BLURB>Type of test pattern to generate.</BLURB>
<DEFAULT>SMPTE 100% color bars</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::timestamp-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Timestamp offset</NICK>
<BLURB>An offset added to timestamps set on buffers (in ns).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::xoffset</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 2nd order products x offset</NICK>
<BLURB>Zoneplate 2nd order products x offset.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::yoffset</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 2nd order products y offset</NICK>
<BLURB>Zoneplate 2nd order products y offset.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::animation-mode</NAME>
<TYPE>GstVideoTestSrcAnimationMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Animation mode</NICK>
<BLURB>For pattern=ball, which counter defines the position of the ball.</BLURB>
<DEFAULT>frame count</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::flip</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Flip</NICK>
<BLURB>For pattern=ball, invert colors every second.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::motion</NAME>
<TYPE>GstVideoTestSrcMotionType</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Motion</NICK>
<BLURB>For pattern=ball, what motion the ball does.</BLURB>
<DEFAULT>Ball waves back and forth, up and down</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::average-period</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXLONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Period over which to average</NICK>
<BLURB>Period over which to average the framerate (in ns) (0 = disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::drop</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Drop</NICK>
<BLURB>Number of dropped frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::drop-only</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Only Drop</NICK>
<BLURB>Only drop frames, no duplicates are produced.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::duplicate</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Duplicate</NICK>
<BLURB>Number of duplicated frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::in</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>In</NICK>
<BLURB>Number of input frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::max-rate</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 1</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>maximum framerate</NICK>
<BLURB>Maximum framerate allowed to pass through (in frames per second, implies drop-only).</BLURB>
<DEFAULT>2147483647</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::new-pref</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>New Pref</NICK>
<BLURB>Value indicating how much to prefer new frames (unused).</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::out</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Out</NICK>
<BLURB>Number of output frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::silent</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>silent</NICK>
<BLURB>Don't emit notify for dropped and duplicated frames.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::skip-to-first</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Skip to first buffer</NICK>
<BLURB>Don't produce buffers before the first one we receive.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::rate</NAME>
<TYPE>gdouble</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Rate</NICK>
<BLURB>Factor of speed for frame displaying.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::max-duplication-time</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Maximum time to duplicate a frame</NICK>
<BLURB>Do not duplicate frames if the gap exceeds this period (in ns) (0 = disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioConvert::dithering</NAME>
<TYPE>GstAudioDitherMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Dithering</NICK>
<BLURB>Selects between different dithering methods.</BLURB>
<DEFAULT>GST_AUDIO_DITHER_TPDF</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioConvert::noise-shaping</NAME>
<TYPE>GstAudioNoiseShapingMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Noise shaping</NICK>
<BLURB>Selects between different noise shaping methods.</BLURB>
<DEFAULT>GST_AUDIO_NOISE_SHAPING_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioConvert::mix-matrix</NAME>
<TYPE>GstValueArray</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Input/output channel matrix</NICK>
<BLURB>Transformation matrix for input/output channels.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSrc::current-port</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>r</FLAGS>
<NICK>current-port</NICK>
<BLURB>The port number the socket is currently bound to.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSrc::host</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Host</NICK>
<BLURB>The hostname to listen as.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSrc::port</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Port</NICK>
<BLURB>The port to listen to (0=random available port).</BLURB>
<DEFAULT>4953</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSink::current-port</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>r</FLAGS>
<NICK>current-port</NICK>
<BLURB>The port number the socket is currently bound to.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSink::host</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>host</NICK>
<BLURB>The host/IP to listen on.</BLURB>
<DEFAULT>"localhost"</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSink::port</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>port</NICK>
<BLURB>The port to listen to (0=random available port).</BLURB>
<DEFAULT>4953</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSrc::host</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Host</NICK>
<BLURB>The host IP address to receive packets from.</BLURB>
<DEFAULT>"localhost"</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSrc::port</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Port</NICK>
<BLURB>The port to receive packets from.</BLURB>
<DEFAULT>4953</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSrc::timeout</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>timeout</NICK>
<BLURB>Value in seconds to timeout a blocking I/O. 0 = No timeout. .</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSink::host</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Host</NICK>
<BLURB>The host/IP to send the packets to.</BLURB>
<DEFAULT>"localhost"</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSink::port</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Port</NICK>
<BLURB>The port to send the packets to.</BLURB>
<DEFAULT>4953</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::handle-read</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle Read</NICK>
<BLURB>Handle client reads and discard the data.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::add</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Add</NICK>
<BLURB>Number of added samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::drop</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Drop</NICK>
<BLURB>Number of dropped samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::in</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>In</NICK>
<BLURB>Number of input samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::out</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Out</NICK>
<BLURB>Number of output samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::silent</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>silent</NICK>
<BLURB>Don't emit notify for dropped and duplicated frames.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::skip-to-first</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Skip to first buffer</NICK>
<BLURB>Don't produce buffers before the first one we receive.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::tolerance</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>tolerance</NICK>
<BLURB>Only act if timestamp jitter/imperfection exceeds indicated tolerance (ns).</BLURB>
<DEFAULT>40000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::autopaint-colorkey</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Autofill with colorkey</NICK>
<BLURB>Whether to autofill overlay with colorkey.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::brightness</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1000,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Brightness</NICK>
<BLURB>The brightness of the video.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::colorkey</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Colorkey</NICK>
<BLURB>Color to use for the overlay mask.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::contrast</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1000,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Contrast</NICK>
<BLURB>The contrast of the video.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::device</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Adaptor number</NICK>
<BLURB>The number of the video adaptor.</BLURB>
<DEFAULT>"0"</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::device-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Adaptor name</NICK>
<BLURB>The name of the video adaptor.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::display</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Display</NICK>
<BLURB>X Display name.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::double-buffer</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Double-buffer</NICK>
<BLURB>Whether to double-buffer the output.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::draw-borders</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Draw Borders</NICK>
<BLURB>Draw black borders to fill unused area in force-aspect-ratio mode.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::force-aspect-ratio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Force aspect ratio</NICK>
<BLURB>When enabled, scaling will respect original aspect ratio.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::handle-events</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle XEvents</NICK>
<BLURB>When enabled, XEvents will be selected and handled.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::handle-expose</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle expose</NICK>
<BLURB>When enabled, the current frame will always be drawn in response to X Expose events.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::hue</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1000,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Hue</NICK>
<BLURB>The hue of the video.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::pixel-aspect-ratio</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Pixel Aspect Ratio</NICK>
<BLURB>The pixel aspect ratio of the device.</BLURB>
<DEFAULT>"1/1"</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::saturation</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1000,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Saturation</NICK>
<BLURB>The saturation of the video.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::synchronous</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Synchronous</NICK>
<BLURB>When enabled, runs the X display in synchronous mode. (unrelated to A/V sync, used only for debugging).</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::window-height</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>window-height</NICK>
<BLURB>Height of the window.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::window-width</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>window-width</NICK>
<BLURB>Width of the window.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::render-rectangle</NAME>
<TYPE>GstValueArray</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>Render Rectangle</NICK>
<BLURB>The render rectangle ('<x, y, width, height>').</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::display</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Display</NICK>
<BLURB>X Display name.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::force-aspect-ratio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Force aspect ratio</NICK>
<BLURB>When enabled, reverse caps negotiation (scaling) will respect original aspect ratio.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::handle-events</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle XEvents</NICK>
<BLURB>When enabled, XEvents will be selected and handled.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::handle-expose</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle expose</NICK>
<BLURB>When enabled, the current frame will always be drawn in response to X Expose events.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::pixel-aspect-ratio</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Pixel Aspect Ratio</NICK>
<BLURB>The pixel aspect ratio of the device.</BLURB>
<DEFAULT>"1/1"</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::synchronous</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Synchronous</NICK>
<BLURB>When enabled, runs the X display in synchronous mode. (unrelated to A/V sync, used only for debugging).</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::window-height</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>window-height</NICK>
<BLURB>Height of the window.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::window-width</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>window-width</NICK>
<BLURB>Width of the window.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>font description</NICK>
<BLURB>Pango font description of font to be used for rendering. See documentation of pango_font_description_from_string for syntax.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::halignment</NAME>
<TYPE>GstTextRenderHAlign</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>horizontal alignment</NICK>
<BLURB>Horizontal alignment of the text.</BLURB>
<DEFAULT>center</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::line-alignment</NAME>
<TYPE>GstTextRenderLineAlign</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>line alignment</NICK>
<BLURB>Alignment of text lines relative to each other.</BLURB>
<DEFAULT>center</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::valignment</NAME>
<TYPE>GstTextRenderVAlign</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>vertical alignment</NICK>
<BLURB>Vertical alignment of the text.</BLURB>
<DEFAULT>baseline</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::xpad</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>horizontal paddding</NICK>
<BLURB>Horizontal paddding when using left/right alignment.</BLURB>
<DEFAULT>25</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::ypad</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>vertical padding</NICK>
<BLURB>Vertical padding when using top/bottom alignment.</BLURB>
<DEFAULT>25</DEFAULT>
</ARG>

<ARG>
<NAME>GstClockOverlay::time-format</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Date/Time Format</NICK>
<BLURB>Format to use for time and date value, as in strftime.</BLURB>
<DEFAULT>"%H:%M:%S"</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::bitrate</NAME>
<TYPE>gint</TYPE>
<RANGE>[G_MAXULONG,250001]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Target Bitrate</NICK>
<BLURB>Attempt to encode at a bitrate averaging this (in bps). This uses the bitrate management engine, and is not recommended for most users. Quality is a better alternative. (-1 == disabled).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::last-message</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>last-message</NICK>
<BLURB>The last status message.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::managed</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Managed</NICK>
<BLURB>Enable bitrate management engine.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::max-bitrate</NAME>
<TYPE>gint</TYPE>
<RANGE>[G_MAXULONG,250001]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Maximum Bitrate</NICK>
<BLURB>Specify a maximum bitrate (in bps). Useful for streaming applications. (-1 == disabled).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::min-bitrate</NAME>
<TYPE>gint</TYPE>
<RANGE>[G_MAXULONG,250001]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Minimum Bitrate</NICK>
<BLURB>Specify a minimum bitrate (in bps). Useful for encoding for a fixed-size channel. (-1 == disabled).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::quality</NAME>
<TYPE>gfloat</TYPE>
<RANGE>[-0.1,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Quality</NICK>
<BLURB>Specify quality instead of specifying a particular bitrate.</BLURB>
<DEFAULT>0.3</DEFAULT>
</ARG>

<ARG>
<NAME>GstCdParanoiaSrc::cache-size</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Cache size</NICK>
<BLURB>Set CD cache size to n sectors (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstCdParanoiaSrc::generic-device</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Generic device</NICK>
<BLURB>Use specified generic scsi device.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstCdParanoiaSrc::paranoia-mode</NAME>
<TYPE>GstCdParanoiaMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Paranoia mode</NICK>
<BLURB>Type of checking to perform.</BLURB>
<DEFAULT>PARANOIA_MODE_FRAGMENT</DEFAULT>
</ARG>

<ARG>
<NAME>GstCdParanoiaSrc::read-speed</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Read speed</NICK>
<BLURB>Read from device at specified speed (-1 and 0 = full speed).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstCdParanoiaSrc::search-overlap</NAME>
<TYPE>gint</TYPE>
<RANGE>[G_MAXULONG,75]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Search overlap</NICK>
<BLURB>Force minimum overlap search during verification to n sectors.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSrc::card-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Card name</NICK>
<BLURB>Human-readable name of the sound card.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSrc::device</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Device</NICK>
<BLURB>ALSA device, as defined in an asound configuration file.</BLURB>
<DEFAULT>"default"</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSrc::device-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Device name</NICK>
<BLURB>Human-readable name of the sound device.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSink::card-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Card name</NICK>
<BLURB>Human-readable name of the sound card.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSink::device</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Device</NICK>
<BLURB>ALSA device, as defined in an asound configuration file.</BLURB>
<DEFAULT>"default"</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSink::device-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Device name</NICK>
<BLURB>Human-readable name of the sound device.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstOggMux::max-delay</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max delay</NICK>
<BLURB>Maximum delay in multiplexing streams.</BLURB>
<DEFAULT>500000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstOggMux::max-page-delay</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max page delay</NICK>
<BLURB>Maximum delay for sending out a page.</BLURB>
<DEFAULT>500000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstOggMux::max-tolerance</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max time tolerance</NICK>
<BLURB>Maximum timestamp difference for maintaining perfect granules.</BLURB>
<DEFAULT>40000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstOggMux::skeleton</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Skeleton</NICK>
<BLURB>Whether to include a Skeleton track.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::bitrate</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,16777215]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Bitrate</NICK>
<BLURB>Compressed video bitrate (kbps).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::cap-overflow</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Cap overflow</NICK>
<BLURB>Enable capping of bit reservoir overflows.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::cap-underflow</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Cap underflow</NICK>
<BLURB>Enable capping of bit reservoir underflows.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::drop-frames</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Drop frames</NICK>
<BLURB>Allow or disallow frame dropping.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::keyframe-auto</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Keyframe Auto</NICK>
<BLURB>Automatic keyframe detection.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::keyframe-force</NAME>
<TYPE>gint</TYPE>
<RANGE>[1,32768]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Keyframe force</NICK>
<BLURB>Force keyframe every N frames.</BLURB>
<DEFAULT>64</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::keyframe-freq</NAME>
<TYPE>gint</TYPE>
<RANGE>[1,32768]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Keyframe frequency</NICK>
<BLURB>Keyframe frequency.</BLURB>
<DEFAULT>64</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::multipass-cache-file</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Multipass Cache File</NICK>
<BLURB>Multipass cache file.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::multipass-mode</NAME>
<TYPE>GstTheoraEncMultipassMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Multipass mode</NICK>
<BLURB>Single pass or first/second pass.</BLURB>
<DEFAULT>Single pass</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::quality</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,63]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Quality</NICK>
<BLURB>Video quality.</BLURB>
<DEFAULT>48</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::rate-buffer</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Rate Control Buffer</NICK>
<BLURB>Sets the size of the rate control buffer, in units of frames.  The default value of 0 instructs the encoder to automatically select an appropriate value.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::speed-level</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,3]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Speed level</NICK>
<BLURB>Controls the amount of motion vector searching done while encoding.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::vp3-compatible</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>VP3 compatible</NICK>
<BLURB>Disables non-VP3 compatible features.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstSocketSrc::socket</NAME>
<TYPE>GSocket*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Socket</NICK>
<BLURB>The socket to receive packets from.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstSocketSrc::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The caps of the source pad.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstSocketSrc::send-messages</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Send Messages</NICK>
<BLURB>If GstNetworkMessage events should be handled.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTimeOverlay::time-mode</NAME>
<TYPE>GstTimeOverlayTimeLine</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Time Mode</NICK>
<BLURB>What time to show.</BLURB>
<DEFAULT>buffer-time</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaMidiSrc::ports</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Ports</NICK>
<BLURB>Comma separated list of sequencer ports (e.g. client:port,...).</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiSocketSink::send-dispatched</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Send Dispatched</NICK>
<BLURB>If GstNetworkMessageDispatched events should be pushed.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiSocketSink::send-messages</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Send Messages</NICK>
<BLURB>If GstNetworkMessage events should be pushed.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::audio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio or voice</NICK>
<BLURB>Audio or voice (DEPRECATED: use audio-type).</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::audio-type</NAME>
<TYPE>GstOpusEncAudioType</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>What type of audio to optimize for</NICK>
<BLURB>What type of audio to optimize for.</BLURB>
<DEFAULT>Generic audio</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::bandwidth</NAME>
<TYPE>GstOpusEncBandwidth</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Band Width</NICK>
<BLURB>Audio Band Width.</BLURB>
<DEFAULT>Full band</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::bitrate</NAME>
<TYPE>gint</TYPE>
<RANGE>[4000,650000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Encoding Bit-rate</NICK>
<BLURB>Specify an encoding bit-rate (in bps).</BLURB>
<DEFAULT>64000</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::bitrate-type</NAME>
<TYPE>GstOpusEncBitrateType</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Bitrate type</NICK>
<BLURB>Bitrate type.</BLURB>
<DEFAULT>CBR</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::cbr</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Constant bit rate</NICK>
<BLURB>Constant bit rate (DEPRECATED: use bitrate-type).</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::complexity</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Complexity</NICK>
<BLURB>Complexity.</BLURB>
<DEFAULT>10</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::constrained-vbr</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Constrained VBR</NICK>
<BLURB>Constrained VBR (DEPRECATED: use bitrate-type).</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::dtx</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>DTX</NICK>
<BLURB>DTX.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::frame-size</NAME>
<TYPE>GstOpusEncFrameSize</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Frame Size</NICK>
<BLURB>The duration of an audio frame, in ms.</BLURB>
<DEFAULT>20</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::inband-fec</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>In-band FEC</NICK>
<BLURB>Enable forward error correction.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::max-payload-size</NAME>
<TYPE>guint</TYPE>
<RANGE>[2,4000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max payload size</NICK>
<BLURB>Maximum payload size in bytes.</BLURB>
<DEFAULT>4000</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusEnc::packet-loss-percentage</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,100]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Loss percentage</NICK>
<BLURB>Packet loss percentage.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusDec::apply-gain</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Apply gain</NICK>
<BLURB>Apply gain if any is specified in the header.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusDec::use-inband-fec</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Use in-band FEC</NICK>
<BLURB>Use forward error correction if available (needs PLC enabled).</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstOpusDec::phase-inversion</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Control Phase Inversion</NICK>
<BLURB>Set to true to enable phase inversion, this will slightly improve stereo quality, but will have side effects when downmixed to mono.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::buffer-duration</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer duration (ns)</NICK>
<BLURB>Buffer duration when buffering streams (-1 default value).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::buffer-size</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer size (bytes)</NICK>
<BLURB>Buffer size when buffering streams (-1 default value).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::connection-speed</NAME>
<TYPE>guint64</TYPE>
<RANGE><= 18446744073709551</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::download</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Download</NICK>
<BLURB>Attempt download buffering when buffering network streams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::ring-buffer-max-size</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXUINT</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. ring buffer size (bytes)</NICK>
<BLURB>Max. amount of data in the ring buffer (bytes, 0 = ring buffer disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::source</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Source</NICK>
<BLURB>Source object used.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>URI</NICK>
<BLURB>URI to decode.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::use-buffering</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Use Buffering</NICK>
<BLURB>Perform buffering on demuxed/parsed media.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::high-watermark</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>High watermark</NICK>
<BLURB>High threshold for buffering to finish. Only used if use-buffering is True.</BLURB>
<DEFAULT>0.99</DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::low-watermark</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Low watermark</NICK>
<BLURB>Low threshold for buffering to start. Only used if use-buffering is True.</BLURB>
<DEFAULT>0.01</DEFAULT>
</ARG>

<ARG>
<NAME>GstURISourceBin::statistics</NAME>
<TYPE>GstStructure*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Queue Statistics</NICK>
<BLURB>A set of statistics over all the queue-like elements contained in this element.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::audio-filter</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio filter</NICK>
<BLURB>the audio filter(s) to apply, if possible.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::audio-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio Sink</NICK>
<BLURB>the audio output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::audio-stream-combiner</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio stream combiner</NICK>
<BLURB>Current audio stream combiner (default: none)).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::auto-select-streams</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Automatic Select-Streams</NICK>
<BLURB>Whether playbin should respond to stream-collection messags with select-streams events.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::av-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>AV Offset</NICK>
<BLURB>The synchronisation offset between audio and video in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::buffer-duration</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer duration (ns)</NICK>
<BLURB>Buffer duration when buffering network streams.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::buffer-size</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer size (bytes)</NICK>
<BLURB>Buffer size when buffering network streams.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::connection-speed</NAME>
<TYPE>guint64</TYPE>
<RANGE><= 18446744073709551</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::current-audio</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current audio</NICK>
<BLURB>Currently playing audio stream (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::current-suburi</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Current .sub-URI</NICK>
<BLURB>The currently playing URI of a subtitle.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::current-text</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current Text</NICK>
<BLURB>Currently playing text stream (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::current-uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Current URI</NICK>
<BLURB>The currently playing URI.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::current-video</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current Video</NICK>
<BLURB>Currently playing video stream (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::flags</NAME>
<TYPE>GstPlayFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Flags</NICK>
<BLURB>Flags to control behaviour.</BLURB>
<DEFAULT>Render the video stream|Render the audio stream|Render subtitles|Use software volume|Buffer demuxed/parsed data|Deinterlace video if necessary|Use software color balance</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::force-aspect-ratio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Force Aspect Ratio</NICK>
<BLURB>When enabled, scaling will respect original aspect ratio.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::mute</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mute</NICK>
<BLURB>Mute the audio channel without changing the volume.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::n-audio</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>r</FLAGS>
<NICK>Number Audio</NICK>
<BLURB>Total number of audio streams.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::n-text</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>r</FLAGS>
<NICK>Number Text</NICK>
<BLURB>Total number of text streams.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::n-video</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>r</FLAGS>
<NICK>Number Video</NICK>
<BLURB>Total number of video streams.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::ring-buffer-max-size</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXUINT</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. ring buffer size (bytes)</NICK>
<BLURB>Max. amount of data in the ring buffer (bytes, 0 = ring buffer disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::sample</NAME>
<TYPE>GstSample*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Sample</NICK>
<BLURB>The last sample (NULL = no video available).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::source</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Source</NICK>
<BLURB>Source element.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::subtitle-font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>Subtitle font description</NICK>
<BLURB>Pango font description of font to be used for subtitle rendering.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::suburi</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>.sub-URI</NICK>
<BLURB>Optional URI of a subtitle.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::text-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text plugin</NICK>
<BLURB>the text output element to use (NULL = default subtitleoverlay).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::text-stream-combiner</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text stream combiner</NICK>
<BLURB>Current text stream combiner (default: none).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>URI</NICK>
<BLURB>URI of the media to play.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::video-filter</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video filter</NICK>
<BLURB>the video filter(s) to apply, if possible.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::video-multiview-flags</NAME>
<TYPE>GstVideoMultiviewFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Multiview Flags Override</NICK>
<BLURB>Override details of the multiview frame layout.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::video-multiview-mode</NAME>
<TYPE>GstVideoMultiviewFramePacking</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Multiview Mode Override</NICK>
<BLURB>Re-interpret a video stream as one of several frame-packed stereoscopic modes.</BLURB>
<DEFAULT>GST_VIDEO_MULTIVIEW_FRAME_PACKING_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::video-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video Sink</NICK>
<BLURB>the video output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::video-stream-combiner</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video stream combiner</NICK>
<BLURB>Current video stream combiner (default: none).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::vis-plugin</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Vis plugin</NICK>
<BLURB>the visualization element to use (NULL = default).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Volume</NICK>
<BLURB>The audio volume, 1.0=100%.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin3::text-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text Offset</NICK>
<BLURB>The synchronisation offset between text and video in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstParseBin::connection-speed</NAME>
<TYPE>guint64</TYPE>
<RANGE><= 18446744073709551</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstParseBin::expose-all-streams</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Expose All Streams</NICK>
<BLURB>Expose all streams, including those of unknown type or that don't match the 'caps' property.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstParseBin::sink-caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sink Caps</NICK>
<BLURB>The caps of the input data. (NULL = use typefind element).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstParseBin::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodebin3::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The caps on which to stop decoding. (NULL = default).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraDec::visualize-bit-usage</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,255]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Visualize bitstream usage breakdown</NICK>
<BLURB>Sets the bitstream breakdown visualization mode. Values influence the width of the bit usage bars to show.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraDec::visualize-macroblock-modes</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Visualize macroblock modes</NICK>
<BLURB>Show macroblock mode selection overlaid on image. Value gives a mask for macroblock (MB) modes to show.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraDec::visualize-motion-vectors</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Visualize motion vectors</NICK>
<BLURB>Show motion vector selection overlaid on image. Value gives a mask for motion vector (MV) modes to show.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraDec::visualize-quantization-modes</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Visualize adaptive quantization modes</NICK>
<BLURB>Show adaptive quantization mode selection overlaid on image. Value gives a mask for quantization (QI) modes to show.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::format</NAME>
<TYPE>GstVideoFormat</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Format</NICK>
<BLURB>Format of frames in raw stream.</BLURB>
<DEFAULT>GST_VIDEO_FORMAT_I420</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::frame-stride</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Frame stride</NICK>
<BLURB>Stride between whole frames (0 = frames are tightly packed together).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::framerate</NAME>
<TYPE>GstFraction</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Frame rate</NICK>
<BLURB>Rate of frames in raw stream.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::height</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Height</NICK>
<BLURB>Height of frames in raw stream.</BLURB>
<DEFAULT>240</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::interlaced</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Interlaced flag</NICK>
<BLURB>True if frames in raw stream are interlaced.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::pixel-aspect-ratio</NAME>
<TYPE>GstFraction</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Pixel aspect ratio</NICK>
<BLURB>Pixel aspect ratio of frames in raw stream.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::plane-offsets</NAME>
<TYPE>GstValueArray</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Plane offsets</NICK>
<BLURB>Offsets of the planes in bytes (e.g. plane-offsets="<0,76800>").</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::plane-strides</NAME>
<TYPE>GstValueArray</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Plane strides</NICK>
<BLURB>Strides of the planes in bytes (e.g. plane-strides="<320,320>").</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::top-field-first</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Top field first</NICK>
<BLURB>True if top field in frames in raw stream come first (not used if frames aren't interlaced).</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::width</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Width</NICK>
<BLURB>Width of frames in raw stream.</BLURB>
<DEFAULT>320</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawVideoParse::frame-size</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Frame size</NICK>
<BLURB>Size of a frame (0 = frames are tightly packed together).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawAudioParse::channel-positions</NAME>
<TYPE>GValueArray*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Channel positions</NICK>
<BLURB>Channel positions used on the output.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstRawAudioParse::format</NAME>
<TYPE>GstRawAudioParseFormat</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Format</NICK>
<BLURB>Format of the raw audio stream.</BLURB>
<DEFAULT>PCM</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawAudioParse::interleaved</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Interleaved layout</NICK>
<BLURB>True if audio has interleaved layout.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawAudioParse::num-channels</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Number of channels</NICK>
<BLURB>Number of channels in raw stream.</BLURB>
<DEFAULT>2</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawAudioParse::pcm-format</NAME>
<TYPE>GstAudioFormat</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>PCM format</NICK>
<BLURB>Format of audio samples in PCM stream (ignored if format property is not set to pcm).</BLURB>
<DEFAULT>GST_AUDIO_FORMAT_UNKNOWN</DEFAULT>
</ARG>

<ARG>
<NAME>GstRawAudioParse::sample-rate</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sample rate</NICK>
<BLURB>Rate of audio samples in raw stream.</BLURB>
<DEFAULT>44100</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLViewConvertElement::downmix-mode</NAME>
<TYPE>GstGLStereoDownmix</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mode for mono downmixed output</NICK>
<BLURB>Output anaglyph type to generate when downmixing to mono.</BLURB>
<DEFAULT>GST_GL_STEREO_DOWNMIX_ANAGLYPH_GREEN_MAGENTA_DUBOIS</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLViewConvertElement::input-flags-override</NAME>
<TYPE>GstVideoMultiviewFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Input Multiview Flags Override</NICK>
<BLURB>Override any input information about multiview layout flags.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLViewConvertElement::input-mode-override</NAME>
<TYPE>GstVideoMultiviewFramePacking</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Input Multiview Mode Override</NICK>
<BLURB>Override any input information about multiview layout.</BLURB>
<DEFAULT>GST_VIDEO_MULTIVIEW_FRAME_PACKING_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLViewConvertElement::output-flags-override</NAME>
<TYPE>GstVideoMultiviewFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Output Multiview Flags Override</NICK>
<BLURB>Override automatic negotiation for output multiview layout flags.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLViewConvertElement::output-mode-override</NAME>
<TYPE>GstVideoMultiviewMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Output Multiview Mode Override</NICK>
<BLURB>Override automatic output mode selection for multiview layout.</BLURB>
<DEFAULT>GST_VIDEO_MULTIVIEW_MODE_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLTestSrc::is-live</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Is Live</NICK>
<BLURB>Whether to act as a live source.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLTestSrc::pattern</NAME>
<TYPE>GstGLTestSrcPattern</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Pattern</NICK>
<BLURB>Type of test pattern to generate.</BLURB>
<DEFAULT>SMPTE 100% color bars</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLTestSrc::timestamp-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Timestamp offset</NICK>
<BLURB>An offset added to timestamps set on buffers (in ns).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSrcBin::src</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>GL src element</NICK>
<BLURB>The GL src chain to use.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::async</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Async</NICK>
<BLURB>Go asynchronously to PAUSED.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::blocksize</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Block size</NICK>
<BLURB>Size in bytes to pull per buffer (0 = default).</BLURB>
<DEFAULT>4096</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::brightness</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[-1,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Brightness</NICK>
<BLURB>brightness.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::contrast</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,2]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Contrast</NICK>
<BLURB>contrast.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::enable-last-sample</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Enable Last Buffer</NICK>
<BLURB>Enable the last-sample property.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::force-aspect-ratio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Force aspect ratio</NICK>
<BLURB>When enabled, scaling will respect original aspect ratio.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::hue</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[-1,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Hue</NICK>
<BLURB>hue.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::last-sample</NAME>
<TYPE>GstSample*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Last Sample</NICK>
<BLURB>The last sample received in the sink.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::max-bitrate</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max Bitrate</NICK>
<BLURB>The maximum bits per second to render (0 = disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::max-lateness</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max Lateness</NICK>
<BLURB>Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::qos</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Qos</NICK>
<BLURB>Generate Quality-of-Service events upstream.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::render-delay</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Render Delay</NICK>
<BLURB>Additional render delay of the sink in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::saturation</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,2]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Saturation</NICK>
<BLURB>saturation.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>GL sink element</NICK>
<BLURB>The GL sink chain to use.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::sync</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sync</NICK>
<BLURB>Sync on the clock.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::throttle-time</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Throttle time</NICK>
<BLURB>The time to keep between rendered buffers (0 = disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLSinkBin::ts-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>TS Offset</NICK>
<BLURB>Timestamp offset in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterShader::fragment</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Fragment Source</NICK>
<BLURB>GLSL fragment source.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterShader::shader</NAME>
<TYPE>GstGLShader*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Shader object</NICK>
<BLURB>GstGLShader to use.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterShader::uniforms</NAME>
<TYPE>GstStructure*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>GLSL Uniforms</NICK>
<BLURB>GLSL Uniforms.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterShader::update-shader</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>Update Shader</NICK>
<BLURB>Emit the 'create-shader' signal for the next frame.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterShader::vertex</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Vertex Source</NICK>
<BLURB>GLSL vertex source.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLOverlay::alpha</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Alpha</NICK>
<BLURB>Global alpha of overlay image.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLOverlay::location</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>location</NICK>
<BLURB>Location of image file to overlay.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLOverlay::offset-x</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>X Offset</NICK>
<BLURB>For positive value, horizontal offset of overlay image in pixels from left of video image. For negative value, horizontal offset of overlay image in pixels from right of video image.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLOverlay::offset-y</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Y Offset</NICK>
<BLURB>For positive value, vertical offset of overlay image in pixels from top of video image. For negative value, vertical offset of overlay image in pixels from bottom of video image.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLOverlay::overlay-height</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Overlay Height</NICK>
<BLURB>Height of overlay image in pixels (0 = same as overlay image).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLOverlay::overlay-width</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Overlay Width</NICK>
<BLURB>Width of overlay image in pixels (0 = same as overlay image).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLOverlay::relative-x</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Relative X Offset</NICK>
<BLURB>Horizontal offset of overlay image in fractions of video image width, from top-left corner of video image.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLOverlay::relative-y</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Relative Y Offset</NICK>
<BLURB>Vertical offset of overlay image in fractions of video image height, from top-left corner of video image.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSink::context</NAME>
<TYPE>GstGLContext*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>OpenGL context</NICK>
<BLURB>Get OpenGL context.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSink::force-aspect-ratio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Force aspect ratio</NICK>
<BLURB>When enabled, scaling will respect original aspect ratio.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSink::handle-events</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle XEvents</NICK>
<BLURB>When enabled, XEvents will be selected and handled.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSink::ignore-alpha</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Ignore Alpha</NICK>
<BLURB>When enabled, alpha will be ignored and converted to black.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSink::output-multiview-downmix-mode</NAME>
<TYPE>GstGLStereoDownmix</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mode for mono downmixed output</NICK>
<BLURB>Output anaglyph type to generate when downmixing to mono.</BLURB>
<DEFAULT>GST_GL_STEREO_DOWNMIX_ANAGLYPH_GREEN_MAGENTA_DUBOIS</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSink::output-multiview-flags</NAME>
<TYPE>GstVideoMultiviewFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Output Multiview Flags</NICK>
<BLURB>Output multiview layout modifier flags.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSink::output-multiview-mode</NAME>
<TYPE>GstVideoMultiviewMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Output Multiview Mode</NICK>
<BLURB>Choose output mode for multiview/3D video.</BLURB>
<DEFAULT>GST_VIDEO_MULTIVIEW_MODE_MONO</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSink::pixel-aspect-ratio</NAME>
<TYPE>GstFraction</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Pixel Aspect Ratio</NICK>
<BLURB>The pixel aspect ratio of the device.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSink::rotate-method</NAME>
<TYPE>GstGLRotateMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>rotate method</NICK>
<BLURB>rotate method.</BLURB>
<DEFAULT>Identity (no rotation)</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSink::render-rectangle</NAME>
<TYPE>GstValueArray</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>Render Rectangle</NICK>
<BLURB>The render rectangle ('<x, y, width, height>').</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::context</NAME>
<TYPE>GstGLContext*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>OpenGL context</NICK>
<BLURB>Get OpenGL context.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::force-aspect-ratio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Force aspect ratio</NICK>
<BLURB>When enabled, scaling will respect original aspect ratio.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::handle-events</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle XEvents</NICK>
<BLURB>When enabled, XEvents will be selected and handled.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::ignore-alpha</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Ignore Alpha</NICK>
<BLURB>When enabled, alpha will be ignored and converted to black.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::output-multiview-downmix-mode</NAME>
<TYPE>GstGLStereoDownmix</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mode for mono downmixed output</NICK>
<BLURB>Output anaglyph type to generate when downmixing to mono.</BLURB>
<DEFAULT>GST_GL_STEREO_DOWNMIX_ANAGLYPH_GREEN_MAGENTA_DUBOIS</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::output-multiview-flags</NAME>
<TYPE>GstVideoMultiviewFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Output Multiview Flags</NICK>
<BLURB>Output multiview layout modifier flags.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::output-multiview-mode</NAME>
<TYPE>GstVideoMultiviewMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Output Multiview Mode</NICK>
<BLURB>Choose output mode for multiview/3D video.</BLURB>
<DEFAULT>GST_VIDEO_MULTIVIEW_MODE_MONO</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::pixel-aspect-ratio</NAME>
<TYPE>GstFraction</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Pixel Aspect Ratio</NICK>
<BLURB>The pixel aspect ratio of the device.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::rotate-method</NAME>
<TYPE>GstGLRotateMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>rotate method</NICK>
<BLURB>rotate method.</BLURB>
<DEFAULT>Identity (no rotation)</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::show-preroll-frame</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Show preroll frame</NICK>
<BLURB>Whether to render video frames during preroll.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLImageSinkBin::render-rectangle</NAME>
<TYPE>GstValueArray</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>Render Rectangle</NICK>
<BLURB>The render rectangle ('<x, y, width, height>').</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterCube::aspect</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,100]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Aspect</NICK>
<BLURB>Field of view in the x direction.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterCube::blue</NAME>
<TYPE>gfloat</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Blue</NICK>
<BLURB>Background blue color.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterCube::fovy</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,180]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Fovy</NICK>
<BLURB>Field of view angle in degrees.</BLURB>
<DEFAULT>45</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterCube::green</NAME>
<TYPE>gfloat</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Green</NICK>
<BLURB>Background green color.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterCube::red</NAME>
<TYPE>gfloat</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Red</NICK>
<BLURB>Background red color.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterCube::zfar</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zfar</NICK>
<BLURB>Specifies the distance from the viewer to the far clipping plane.</BLURB>
<DEFAULT>100</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterCube::znear</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,100]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Znear</NICK>
<BLURB>Specifies the distance from the viewer to the near clipping plane.</BLURB>
<DEFAULT>0.1</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLFilterBin::filter</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>GL filter element</NICK>
<BLURB>The GL filter chain to use.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_xray::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_xpro::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_twirl::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_tunnel::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_stretch::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_squeeze::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_square::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_sobel::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_sobel::invert</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Invert the colors for sobel effect</NICK>
<BLURB>Invert colors to get dark edges on bright background when using sobel effect.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_sin::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_sepia::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_mirror::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_lumaxpro::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_laplacian::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_laplacian::invert</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Invert the colors for sobel effect</NICK>
<BLURB>Invert colors to get dark edges on bright background when using sobel effect.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_identity::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_heat::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_glow::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_fisheye::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_bulge::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>gleffects_blur::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLEffectsGeneric::effect</NAME>
<TYPE>GstGLEffectsEffect</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Effect</NICK>
<BLURB>Select which effect apply to GL video texture.</BLURB>
<DEFAULT>Do nothing Effect</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLEffectsGeneric::hswap</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Swap</NICK>
<BLURB>Switch video texture left to right, useful with webcams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLEffectsGeneric::invert</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Invert the colors for sobel effect</NICK>
<BLURB>Invert colors to get dark edges on bright background when using sobel effect.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLDifferenceMatte::location</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Background image location</NICK>
<BLURB>Background image location.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLDeinterlace::method</NAME>
<TYPE>GstGLDeinterlaceMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Deinterlace Method</NICK>
<BLURB>Select which deinterlace method apply to GL video texture.</BLURB>
<DEFAULT>Blur Vertical</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLColorBalance::brightness</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[-1,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Brightness</NICK>
<BLURB>brightness.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLColorBalance::contrast</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,2]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Contrast</NICK>
<BLURB>contrast.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLColorBalance::hue</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[-1,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Hue</NICK>
<BLURB>hue.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLColorBalance::saturation</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,2]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Saturation</NICK>
<BLURB>saturation.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstLiveAdder::latency</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Buffer latency</NICK>
<BLURB>Additional latency in live mode to allow upstream to take longer to produce buffers for the current position (in milliseconds).</BLURB>
<DEFAULT>30</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioInterleave::channel-positions</NAME>
<TYPE>GValueArray*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Channel positions</NICK>
<BLURB>Channel positions used on the output.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioInterleave::channel-positions-from-input</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Channel positions from input</NICK>
<BLURB>Take channel positions from the input.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::buffer-duration</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer duration (ns)</NICK>
<BLURB>Buffer duration when buffering streams (-1 default value).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::buffer-size</NAME>
<TYPE>gint</TYPE>
<RANGE>>= G_MAXULONG</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer size (bytes)</NICK>
<BLURB>Buffer size when buffering streams (-1 default value).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The caps on which to stop decoding. (NULL = default).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::connection-speed</NAME>
<TYPE>guint64</TYPE>
<RANGE><= 18446744073709551</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::current-suburi</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Current .sub-URI</NICK>
<BLURB>The currently playing URI of a subtitle.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::current-uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Current URI</NICK>
<BLURB>The currently playing URI.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::download</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Download</NICK>
<BLURB>Attempt download buffering when buffering network streams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::ring-buffer-max-size</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXUINT</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. ring buffer size (bytes)</NICK>
<BLURB>Max. amount of data in the ring buffer (bytes, 0 = ring buffer disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::source</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Source</NICK>
<BLURB>Source object used.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::suburi</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>.sub-URI</NICK>
<BLURB>Optional URI of a subtitle.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>URI</NICK>
<BLURB>URI to decode.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin3::use-buffering</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Use Buffering</NICK>
<BLURB>Perform buffering on demuxed/parsed media.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstCompositor::background</NAME>
<TYPE>GstCompositorBackground</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Background</NICK>
<BLURB>Background type.</BLURB>
<DEFAULT>Checker pattern</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLVideoMixer::background</NAME>
<TYPE>GstGLVideoMixerBackground</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Background</NICK>
<BLURB>Background type.</BLURB>
<DEFAULT>Checker pattern</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLVideoMixerBin::background</NAME>
<TYPE>GstGLVideoMixerBackground</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Background</NICK>
<BLURB>Background type.</BLURB>
<DEFAULT>Checker pattern</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLStereoMix::downmix-mode</NAME>
<TYPE>GstGLStereoDownmix</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mode for mono downmixed output</NICK>
<BLURB>Output anaglyph type to generate when downmixing to mono.</BLURB>
<DEFAULT>GST_GL_STEREO_DOWNMIX_ANAGLYPH_GREEN_MAGENTA_DUBOIS</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLMixerBin::latency</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer latency</NICK>
<BLURB>Additional latency in live mode to allow upstream to take longer to produce buffers for the current position (in nanoseconds).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLMixerBin::mixer</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>GL mixer element</NICK>
<BLURB>The GL mixer chain to use.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGLMixerBin::start-time</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Start Time</NICK>
<BLURB>Start time to use if start-time-selection=set.</BLURB>
<DEFAULT>18446744073709551615</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLMixerBin::start-time-selection</NAME>
<TYPE>GstGLMixerBinStartTimeSelection</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Start Time Selection</NICK>
<BLURB>Decides which start time is output.</BLURB>
<DEFAULT>Start at 0 running time (default)</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLAlpha::alpha</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Alpha</NICK>
<BLURB>The value for the alpha channel.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLAlpha::angle</NAME>
<TYPE>gfloat</TYPE>
<RANGE>[0,90]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Angle</NICK>
<BLURB>Size of the colorcube to change.</BLURB>
<DEFAULT>20</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLAlpha::black-sensitivity</NAME>
<TYPE>guint</TYPE>
<RANGE><= 128</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Black Sensitivity</NICK>
<BLURB>Sensitivity to dark colors.</BLURB>
<DEFAULT>100</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLAlpha::method</NAME>
<TYPE>GstGLAlphaMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Method</NICK>
<BLURB>How the alpha channels should be created.</BLURB>
<DEFAULT>Set/adjust alpha channel</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLAlpha::noise-level</NAME>
<TYPE>gfloat</TYPE>
<RANGE>[0,64]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Noise Level</NICK>
<BLURB>Size of noise radius.</BLURB>
<DEFAULT>2</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLAlpha::target-b</NAME>
<TYPE>guint</TYPE>
<RANGE><= 255</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Target Blue</NICK>
<BLURB>The blue color value for custom RGB chroma keying.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLAlpha::target-g</NAME>
<TYPE>guint</TYPE>
<RANGE><= 255</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Target Green</NICK>
<BLURB>The green color value for custom RGB chroma keying.</BLURB>
<DEFAULT>255</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLAlpha::target-r</NAME>
<TYPE>guint</TYPE>
<RANGE><= 255</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Target Red</NICK>
<BLURB>The red color value for custom RGB chroma keying.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGLAlpha::white-sensitivity</NAME>
<TYPE>guint</TYPE>
<RANGE><= 128</RANGE>
<FLAGS>rw</FLAGS>
<NICK>White Sensitivity</NICK>
<BLURB>Sensitivity to bright colors.</BLURB>
<DEFAULT>100</DEFAULT>
</ARG>

